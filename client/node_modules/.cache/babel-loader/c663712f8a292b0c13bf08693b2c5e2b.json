{"ast":null,"code":"var _jsxFileName = \"/Users/gopal/blockchain/wallet/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js';\nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\nimport TransferList from './TransferList.js';\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransfers] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      const transfers = await wallet.methods.getTransfers().call();\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n      setTransfers(transfers);\n    };\n\n    init();\n  }, []);\n\n  const createTransfer = transfer => {\n    wallet.methods.createTransfer(transfer.amount, transfer.to).send({\n      from: accounts[0]\n    });\n  };\n\n  const approveTransfer = transferId => {\n    wallet.methods.approveTransfer(transferId).send({\n      from: accounts[0]\n    });\n  };\n\n  if (typeof web3 == 'undefined' || typeof accounts == 'undefined' || typeof wallet == 'undefined' || approvers.length == 0 || typeof quorum == 'undefined') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, \"Loading....\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Multisig Dapp\", /*#__PURE__*/React.createElement(Header, {\n    approvers: approvers,\n    quorum: quorum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTransfer, {\n    createTransfer: createTransfer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransferList, {\n    transfers: transfers,\n    approveTransfer: approveTransfer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gopal/blockchain/wallet/client/src/App.js"],"names":["React","useEffect","useState","getWeb3","getWallet","Header","NewTransfer","TransferList","App","web3","setWeb3","undefined","accounts","setAccounts","wallet","setWallet","approvers","setApprovers","quorum","setQuorum","transfers","setTransfers","init","eth","getAccounts","methods","getApprovers","call","getTransfers","createTransfer","transfer","amount","to","send","from","approveTransfer","transferId","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js';\nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\nimport TransferList from './TransferList.js';\n\n\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransfers] = useState([]);\n\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      const transfers = await wallet.methods.getTransfers().call();\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n      setTransfers(transfers);\n    };\n    init();\n  }, []);\n\n  const createTransfer = transfer => {\n    wallet.methods\n      .createTransfer(transfer.amount, transfer.to)\n      .send({ from: accounts[0] });\n  }\n\n  const approveTransfer = transferId => {\n    wallet.methods\n      .approveTransfer(transferId)\n      .send({ from: accounts[0] });\n  }\n\n  if (\n    typeof web3 == 'undefined'\n    || typeof accounts == 'undefined'\n    || typeof wallet == 'undefined'\n    || approvers.length == 0\n    || typeof quorum == 'undefined'\n  ) {\n    return <div>Loading....</div>;\n  }\n  return (\n    <div>\n      Multisig Dapp\n      <Header approvers={approvers} quorum={quorum} />\n      <NewTransfer createTransfer={createTransfer} />\n      <TransferList transfers={transfers} approveTransfer={approveTransfer} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}