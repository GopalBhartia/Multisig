{"ast":null,"code":"var _jsxFileName = \"/Users/gopal/blockchain/wallet/client/src/NewTransfer.js\";\nimport React, { useState } from 'react';\n\nfunction NewTransfer(_ref) {\n  let {\n    createTransfer\n  } = _ref;\n  const [transfer, setTransfer] = useState(undefined);\n\n  const submit = e => {\n    e.preventDefault();\n    createTransfer(transfer);\n  };\n\n  const updateTransfer = (e, field) => {\n    const value = e.target.value;\n    setTransfer({ ...transfer,\n      [field]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Create Transfer\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"amount\",\n    type: \"text\",\n    onChange: e => updateTransfer(e, 'amount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"To\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"to\",\n    type: \"text\",\n    onChange: e => updateTransfer(e, 'to'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default NewTransfer;","map":{"version":3,"sources":["/Users/gopal/blockchain/wallet/client/src/NewTransfer.js"],"names":["React","useState","NewTransfer","createTransfer","transfer","setTransfer","undefined","submit","e","preventDefault","updateTransfer","field","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,OAAyC;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACK,SAAD,CAAxC;;AAEA,QAAMC,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,cAAc,CAACC,QAAD,CAAd;AACH,GAHD;;AAKA,QAAMM,cAAc,GAAG,CAACF,CAAD,EAAIG,KAAJ,KAAc;AACjC,UAAMC,KAAK,GAAGJ,CAAC,CAACK,MAAF,CAASD,KAAvB;AACAP,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACO,KAAD,GAASC;AAAxB,KAAD,CAAX;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAM,IAAA,QAAQ,EAAGJ,CAAD,IAAOD,MAAM,CAACC,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,QAAJ,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,eAQI;AACI,IAAA,EAAE,EAAC,IADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,IAAJ,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAFJ,CADJ;AAoBH;;AAED,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction NewTransfer({ createTransfer }) {\n    const [transfer, setTransfer] = useState(undefined);\n\n    const submit = e => {\n        e.preventDefault();\n        createTransfer(transfer);\n    }\n\n    const updateTransfer = (e, field) => {\n        const value = e.target.value;\n        setTransfer({ ...transfer, [field]: value });\n    }\n\n    return (\n        < div >\n            <h2>Create Transfer</h2>\n            <form onSubmit={(e) => submit(e)}>\n                <label htmlFor=\"amount\">Amount</label>\n                <input\n                    id=\"amount\"\n                    type=\"text\"\n                    onChange={e => updateTransfer(e, 'amount')}\n                />\n                <label htmlFor=\"to\">To</label>\n                <input\n                    id=\"to\"\n                    type=\"text\"\n                    onChange={e => updateTransfer(e, 'to')}\n                />\n                <button>Submit</button>\n            </form>\n        </div >\n    );\n}\n\nexport default NewTransfer;"]},"metadata":{},"sourceType":"module"}